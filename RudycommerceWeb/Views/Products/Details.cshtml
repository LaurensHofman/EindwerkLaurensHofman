@model RudycommerceData.Models.ASPModels.ProductDetailsPageItem

@if (Model.ProductInfo != null && Model.Images != null)
{
    <div class="container">

        <h2 class="h-page-title">@ViewBag.Title</h2>

        <div class="row">

            <div id="column-product-info" class="col-12 col-md-8">
                <div id="images">
                    @if (Model.Images[0] != null)
                    {
                        if (Model.Images.Count > 1)
                        {
                            <div id="img-buttons">
                                <button id="image-button-previous" class="btn btn-secondary">
                                    <img alt="@Resources.ImgAltTexts.ShowPreviousImage" src="~/Images/64_ArrowRight.png" />
                                </button>

                                <div id="current-img-container" class="content-center">
                                    <img src="@Model.Images[0].ImageURL" class="img-current responsive-image" alt="@Model.ProductInfo.Name" />
                                </div>

                                <button id="image-button-next" class="btn btn-secondary">
                                    <img alt="@Resources.ImgAltTexts.ShowNextImage" src="~/Images/64_ArrowRight.png" />
                                </button>
                            </div>
                        }
                        else
                        {
                            <div id="img-buttons">
                                <div id="current-img-container">
                                    <img src="@Model.Images[0].ImageURL" class="img-current responsive-image" alt="@Model.ProductInfo.Name" />
                                </div>
                            </div>
                        }

                        <div id="thumbnail-container" class="row">
                            @if (Model.Images.Count == 1)
                            {
                                <div class="col-6 col-sm-4 col-md-3">
                                    <div class="img-thumbnail selected-img collapse ">
                                        <img class="responsive-image" src="@Model.Images[0].ImageURL" alt="@Model.ProductInfo.Name @Resources.ImgAltTexts.Thumbnail" />
                                    </div>
                                </div>
                            }
                            else
                            {
                                for (int i = 0; i < Model.Images.Count(); i++)
                                {
                                    <div class="col-6 col-sm-4 col-md-3">
                                        @if (i == 0)
                                        {
                                            <div class="img-thumbnail selected-img">
                                                <img class="responsive-image" src="@Model.Images[i].ImageURL" alt="@Model.ProductInfo.Name @Resources.ImgAltTexts.Thumbnail @(i+1)" />
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="img-thumbnail">
                                                <img class="responsive-image" src="@Model.Images[i].ImageURL" alt="@Model.ProductInfo.Name @Resources.ImgAltTexts.Thumbnail @(i+1)" />
                                            </div>
                                        }

                                    </div>
                                }
                            }
                        </div>
                    }
                </div>

                <div id="description">
                    @Model.ProductInfo.Description
                </div>

                @if (Model.SpecificationInfoAndValues != null)
                {
                    <div id="specifications">
                        <h3>@Resources.Global.Specifications</h3>

                        @foreach (var spec in Model.SpecificationInfoAndValues)
                        {
                            bool valueEmpty;
                            if (spec.IsBoolValue)
                            {
                                valueEmpty = (spec.BoolValue == null);
                            }
                            else
                            {
                                valueEmpty = (spec.Value == null);
                            }

                            if (!valueEmpty)
                            {
                                <div class="row">
                                    <div class="col-12 col-sm-6 specification-name big-screen">
                                        @spec.Name :
                                    </div>
                                    @if (spec.AdviceDescription != null)
                                    {
                                        <div class="col-12 col-sm-6 specification-name small-screen advice" data-toggle="popover"
                                             data-placement="top" title="@spec.Name"
                                             data-content="@spec.AdviceDescription.Replace(Environment.NewLine, "<br/>")"
                                             data-html="true">
                                            <span class="questionmark">(?)</span><span class="name">@spec.Name :</span>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-12 col-sm-6 specification-name small-screen">
                                            @spec.Name :
                                        </div>
                                    }

                                    <div class="col-12 col-sm-6 specification-value">
                                        <div class="value">
                                            @if (!spec.IsBoolValue)
                                            {
                                                @Html.Raw(spec.Value);
                                            }
                                            else
                                            {
                                                if (spec.BoolValue == true)
                                                {
                                                    <img alt="@Resources.ImgAltTexts.TrueIcon" class="bool-value" src="~/Images/64_GreenCheck.png" />
                                                }
                                                else
                                                {
                                                    <img alt="@Resources.ImgAltTexts.FalseIcon" class="bool-value" src="~/Images/64_RedCross.png" />
                                                }
                                            }
                                        </div>
                                        @if (spec.AdviceDescription != null)
                                        {
                                            <button type="button" data-toggle="popover" data-trigger="focus" data-placement="right" title="@spec.Name"
                                                    data-content="@spec.AdviceDescription.Replace(Environment.NewLine, "<br/>")"
                                                    data-html="true" class="specification-help btn btn-primary">
                                                <div>
                                                    ?
                                                </div>
                                            </button>
                                        }
                                    </div>
                                </div>
                            }
                        }
                    </div>
                }
            </div>

            <div id="column-price-cart" class="col-12 col-md-4">
                <div class="container">
                    <div class="row">
                        <div class="col-12 mobiletablet-hide">
                            <h4 class="text-center mobiletablet-hide m-bot-2"> @Model.ProductInfo.Name </h4>
                        </div>

                        @if (Model.ProductInfo.BrandIconURL != null)
                        {
                            <div class="col-6 col-md-12">
                                <div class="row content-center">
                                    <div class="col-12 col-md-6 p-0">
                                        <div class="col-6 col-sm-6 col-md-12 text-center mobiletablet-hide"> @Resources.Global.PriceVAT: </div>
                                        <div class="col-12 price text-center">
                                            € @Model.ProductInfo.UnitPrice
                                        </div>
                                    </div>
                                    <div class="col-md-6 mobiletablet-hide">
                                        <div id="brand" class="content-center">
                                            <img class="responsive-image" src="@Model.ProductInfo.BrandIconURL" alt="@Resources.ImgAltTexts.Brand @Model.ProductInfo.BrandName" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-6 col-sm-6 col-md-12 text-center mobiletablet-hide"> @Resources.Global.PriceVAT: </div>
                            <div class="col-6 col-sm-6 col-md-12 price text-center">
                                € @Model.ProductInfo.UnitPrice
                            </div>
                        }

                        <hr class="mobile-hide" />

                        <div class="col-6 col-sm-6 col-md-12 content-center">
                            <div class="call-to-action">
                                <div class="nonmobiletablet-hide">
                                    <button class="add-to-cart" type="button" onclick="cart.addToCart(event, @Model.ProductInfo.ID, '@Model.ProductInfo.Name', '@Model.ProductInfo.UnitPrice')">
                                        <img src="~/Images/64_AddToCartBlue.png" alt="@Resources.ImgAltTexts.AddToCartIcon" />
                                    </button>
                                </div>
                            </div>
                        </div>


                        <div class="col-12 delivery">
                            @Resources.Global.GaranteedDelivery2Days
                            @if (Enumerable.Range(1, 5).Contains(Model.ProductInfo.CurrentStock))
                            {
                                @Html.Raw("<div><span class=\"mobile-hide\">  <strong> " + Resources.Global.HurryUpStockLow + " </strong> </span></div>");
                            }
                        </div>

                        <div class="col-12 mobiletablet-hide">
                            <div class="call-to-action content-center">
                                @Html.Partial("_AddToCartButton",
                               new RudycommerceData.Models.ASPModels.AddToCartModel
                               {ProductID = Model.ProductInfo.ID, ProductName = Model.ProductInfo.Name, UnitPrice = Model.ProductInfo.UnitPrice.ToString() })
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container">
        <div class="h-page-title">
            @Resources.Global.ProductDetailsNotFound
        </div>
        <div class="content-vertcen-right">
            @Html.Partial("_BackToHomepageButton")
        </div>
    </div>
}




@section Styles{
    @Styles.Render("~/Content/Pages/ProductDetails.css")
    @Styles.Render("~/Content/Pages/AddToCartButton.css")
}

@section scripts{
    <script>
        // Enables the bootstrap popovers
        $(document).ready(function () {
            $('[data-toggle="popover"]').popover({
                delay: { show: "0", hide: "0" }
            });
        });

        // Gets all the image thumbnail elements
        let imageElements = document.querySelectorAll('.img-thumbnail img');

        // Adds click events to the thumbnails and the arrow buttons
        function addClickEvents() {

            // Foreach thumbnail, add a click event that allows to change to that image
            imageElements.forEach(function (image) {
                image.addEventListener('click', function () {
                    changeImage(image);
                });

                // Also gives the click event to the container around the thumbnail
                image.parentElement.addEventListener('click', function () {
                    changeImage(image);
                });
            });

            // Gets the left arrow button and adds a click event to it
            var previousButton = document.querySelector('#image-button-previous');
            if (previousButton) {
                previousButton.addEventListener('click', function () {
                    // Gets the currently selected image thumbnail
                    var currentImage = document.querySelector('.img-current');

                    // Gets the index of the currently selected image thumbnail
                    var index = getIndex(imageElements, currentImage);

                    // If the index is 0 (first thumbnail), make the new index the one of the last image
                    if (index == 0) {
                        index = imageElements.length - 1;
                    }
                    else {
                        // Else, make the new index the previous one
                        index = index - 1;
                    }

                    // Change the image to the image with the new index
                    changeImage(imageElements[index]);
                });

            }

            // Gets the right arrow button and adds a click event to it
            var nextButton = document.querySelector('#image-button-next');
            if (nextButton) {
                nextButton.addEventListener('click', function () {
                    // Gets the currently selected image thumbnail
                    var currentImage = document.querySelector('.img-current');

                    // Gets the index of the currently selected image thumbnail
                    var index = getIndex(imageElements, currentImage);

                    // If the index is the last one in the list
                    if (index == imageElements.length - 1) {
                        // Make the new index the first one
                        index = 0
                    }
                    else {
                        // Else, just make the new index the next image in row
                        index = index + 1;
                    }

                    // Changes the image to the image thumbnail with the new index
                    changeImage(imageElements[index]);
                });
            }
        };

        // Gets the index of an item in the list/array
        var getIndex = function (list, item) {
            // Loops through the list
            for (var i = 0; i < list.length; i++) {
                // Checks if the current item in the list equals the item given as parameter
                if (list[i].src == item.src) {
                    // If the item is the same, return the index
                    return i;
                }
            }
        };

        // Changes to the new image
        var changeImage = function (newImage) {
            // Gets the item that houses the big image
            let bigImg = document.querySelector('#current-img-container');

            // Remove the childs from the big image
            while (bigImg.firstChild) {
                bigImg.removeChild(bigImg.firstChild);
            }

            // removes the selected image class from the old selected image
            document.querySelector('.selected-img').classList.remove('selected-img');

            // Clones the thumbnail
            var newElement = newImage.cloneNode(true);
            // Adds the class so that it's the current image
            newElement.classList.add('img-current');
            // Uses the clone for the big image
            bigImg.appendChild(newElement);

            // Adds the selected img class so that it gets a border
            newImage.parentElement.classList.add('selected-img');
        }

        // Adds clickevents to all the elements that need one
        window.onload = addClickEvents;
    </script>
}
