@model RudycommerceData.Models.ASPModels.Filters
@using RudycommerceData.Models.ASPModels;

<div class="container">
    <h2 class="product-list-title">@ViewBag.Title</h2>
    <hr />

</div>

<div class="container-fluid" style="padding-left:2rem;padding-right:2rem;">


    @if (ViewBag.CategoryID != null)
    {
        using (Html.BeginForm("CategoryPage", "Products", FormMethod.Post))
        {
            <div class="row">
                <div class="col-12 content-vertcen-right">

                    @Html.DropDownList("filters.Sort",
                    new SelectList(Model.SortOptions, "Key", "Value"), new { @class = "form-control width-unset"})

                    <button type="submit" class="btn btn-primary mx-1">@Resources.Global.Sort</button>

                </div>

                <div class="col-12 col-md-3 m-top-1">

                    <div class="well">
                        <div class="container">
                            <h4 class="text-center">@Resources.Global.Filters</h4>
                            <hr />
                            @Html.Hidden("filters.CategoryID", Model.CategoryID)

                            @if (Model.FilterOptions == null || Model.FilterOptions.Count <= 0)
                            {
                                <div class="text-center m-bot-1">@Resources.Global.NoFiltersFound</div>
                            }
                            else
                            {


                                for (int i = 0; i < Model.FilterOptions.Count; i++)
                                {
                                    @Html.Hidden($"filters.FilterOptions[{i}].SpecID", Model.FilterOptions[i].SpecID)
                                    if (Model.FilterOptions[i].SpecID == 0)
                                    {
                                        <div><strong>@Resources.Global.Brand</strong></div>
                                    }
                                    else
                                    {
                                        <div><strong>@Model.FilterOptions[i].SpecName</strong></div>
                                    }


                                    @Html.Hidden($"filters.FilterOptions[{i}].SpecName", Model.FilterOptions[i].SpecName)
                                    @Html.Hidden($"filters.FilterOptions[{i}].DisplayOrder", Model.FilterOptions[i].DisplayOrder)
                                    @Html.Hidden($"filters.FilterOptions[{i}].IsEnum", Model.FilterOptions[i].IsEnum)
                                    @Html.Hidden($"filters.FilterOptions[{i}].IsBool", Model.FilterOptions[i].IsBool)

                                    bool isSpecBool = Model.FilterOptions[i].IsBool;

                                    if (isSpecBool)
                                    {
                                        for (int j = 0; j < Model.FilterOptions[i].FilterValues.Count; j++)
                                        {
                                            <div>
                                                @Html.CheckBox($"filters.FilterOptions[{i}].FilterValues[{j}].IsSelected", Model.FilterOptions[i].FilterValues[j].IsSelected)

                                                @if ((bool)Model.FilterOptions[i].FilterValues[j].BoolValue)
                                                {
                                                    @Html.Hidden($"filters.FilterOptions[{i}].FilterValues[{j}].BoolValue", Model.FilterOptions[i].FilterValues[j].BoolValue)
                                                    <label for="filters_FilterOptions_@(i)__FilterValues_@(j)__IsSelected">
                                                        @Resources.Global.Yes
                                                    </label>
                                                }
                                                else
                                                {
                                                    @Html.Hidden($"filters.FilterOptions[{i}].FilterValues[{j}].BoolValue", Model.FilterOptions[i].FilterValues[j].BoolValue)
                                                    <label for="filters_FilterOptions_@(i)__FilterValues_@(j)__IsSelected">
                                                        @Resources.Global.No
                                                    </label>
                                                }
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        for (int j = 0; j < Model.FilterOptions[i].FilterValues.Count; j++)
                                        {
                                            <div>
                                                @Html.CheckBox($"filters.FilterOptions[{i}].FilterValues[{j}].IsSelected", Model.FilterOptions[i].FilterValues[j].IsSelected)
                                                @Html.Hidden($"filters.FilterOptions[{i}].FilterValues[{j}].Value", Model.FilterOptions[i].FilterValues[j].Value)
                                                <label for="filters_FilterOptions_@(i)__FilterValues_@(j)__IsSelected">
                                                    @Model.FilterOptions[i].FilterValues[j].Value
                                                </label>
                                            </div>
                                        }
                                    }
                                }
                            }

                            <div class="row">
                                <div class="col-6 content-vertical-center">
                                    <a href="@Url.Action("CategoryPage", "Products", new { id = Model.CategoryID, sort = Model.Sort })">
                                        @Resources.Global.ClearAllFilters
                                    </a>
                                </div>
                                <div class="col-6 content-vertcen-right">
                                    <button class="btn btn-primary">@Resources.Global.Filter</button>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>

                <div class="col-12 col-md-9">

                    <div class="row">
                        @Html.Partial("_ProductList", (List<RudycommerceData.Models.ASPModels.ProductListItem>)ViewBag.Products)
                    </div>
                </div>
            </div>
        }

    }
    else
    {
        <div class="row">
            <div class="col-12" style="text-align:right;">
                @Resources.Global.SortingOptions @Resources.Global.NotYetImplemented.ToLower()
            </div>
            <div class="col-12 col-md-3 m-top-1">

                <div class="well">
                    <div class="container">
                        <h4 class="text-center">@Resources.Global.Filters</h4>
                        <hr />

                        @Html.Raw("Hier komen de filteropties")

                    </div>
                </div>
            </div>
            <div class="col-12 col-md-9">

                <div class="row">
                    @Html.Partial("_ProductList", (List<RudycommerceData.Models.ASPModels.ProductListItem>)ViewBag.Products)
                </div>
            </div>
        </div>
    }
</div>


@section Styles {
    @Styles.Render("~/Content/Pages/ProductList.css")
    @Styles.Render("~/Content/Pages/AddToCartButton.css")
}

