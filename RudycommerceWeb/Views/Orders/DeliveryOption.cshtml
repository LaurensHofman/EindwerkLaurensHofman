@model RudycommerceData.Models.ASPModels.Delivery
@{
    ViewBag.Title = Resources.Checkout.Delivery;
    Layout = "~/Views/Shared/_CheckoutLayout.cshtml";
}

@section Styles{
    @Styles.Render("/Content/Pages/Form.css")
}

<div class="container">

    @using (Html.BeginForm())
    {
        <div class="form-group cb">
            <div class="checkbox content-center">
                @Html.EditorFor(model => model.OtherAddress)
            </div>
            <label class="control-label" for="OtherAddress">@Resources.Checkout.ChooseOtherAddressForDelivery</label>
            @Html.ValidationMessageFor(model => model.OtherAddress, "", new { @class = "text-danger" })
        </div>
        <div class="row">
            <div class="col-12 col-md-8 m-bot-2">
                @{ string inputClass = (Model.OtherAddress) ? "" : "hide";
                    string addresInfoClass = (Model.OtherAddress) ? "hide" : ""; }

                <div id="input-region" class="form-horizontal @inputClass">
                    @{ string valSumClass = (ViewBag.ShowValidationSummary == null) ? "hide" : "";}
                    @Html.ValidationSummary("", new { @class = "alert alert-danger " + valSumClass })

                    <!--Street and Number-->
                    <div class="row">
                        <div class="col-12 col-md-9">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StreetAndNumber, htmlAttributes: new { @class = "control-label col-12" })
                                <div class="col-12">
                                    @Html.EditorFor(model => model.StreetAndNumber, new { htmlAttributes = new { @class = "form-control", placeholder = Resources.Checkout.ForExampleABBR + " " + Resources.Checkout.ExampleStreetAndNumber } })
                                    @Html.ValidationMessageFor(model => model.StreetAndNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.MailBox, htmlAttributes: new { @class = "control-label col-12" })
                                <div class="col-12">
                                    @Html.EditorFor(model => model.MailBox, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MailBox, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <!--Postal code and City-->
                    <div class="row">
                        <div class="col-6 col-md-3">
                            <div class="form-group">
                                @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-12" })
                                <div class="col-12">
                                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = Resources.Checkout.ForExampleABBR + " " + Resources.Checkout.ExamplePostalCode } })
                                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-12 col-md-9">
                            <div class="form-group">
                                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-12" })
                                <div class="col-12">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = Resources.Checkout.ForExampleABBR + " " + Resources.Checkout.ExampleCity } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <!--Country-->
                    <div class="row">
                        <div class="col-12 col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label col-12" })
                                <div class="col-12">
                                    @Html.DropDownListFor(model => model.CountryCode, new SelectList(Model.CountriesByCode, "Key", "Value"), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <div id="other-billing-addres-info" class="@addresInfoClass">@Resources.Checkout.OtherDeliveryAddressExplanation</div>
            </div>

            <div class="col-12 col-md-4 content-vertbot-right">
                    <input type="submit" value="@Resources.Checkout.ContinueToPayment" class="btn btn-secondary" />
            </div>
        </div>
    }

</div>

@section scripts {

    <script>
        // https://codepen.io/gabrieleromanato/pen/VYmrJV?editors=1010

        // Toggler to enable/disable changes to the address fields
        var addressToggler;
        (function () {

            // Toggles the visibility of the address fields
            var AddresToggler = function (cb, inputreg, billingaddrinfo) {
                // Defines the checkbox that toggles the visibility of the address fields
                this.checkbox = cb;

                // Define the input region that needs to be collapsed/shown
                this.inputregion = inputreg;
                // Define the information text that needs to be collapsed/shown
                this.billingaddressinfo = billingaddrinfo;

                this.toggle();
            };

            AddresToggler.prototype = {
                toggle: function () {
                    var self = this;
                    self.checkbox.addEventListener('change', function () {

                        if (self.checkbox.checked) {
                            self.inputregion.classList.remove('hide');
                            self.billingaddressinfo.classList.add('hide');
                        }
                        else {
                            self.inputregion.classList.add('hide');
                            self.billingaddressinfo.classList.remove('hide');
                        }
                    }, false);
                }
            };

            window.onload = function () {
                // Gets the checkbox that toggles the enable/disable of the form
                var toggleCheckbox = document.querySelector('#OtherAddress');

                var inputregion = document.querySelector('#input-region');
                var othbilladdrinfo = document.querySelector('#other-billing-addres-info');

                var addressToggler = new AddresToggler(toggleCheckbox, inputregion, othbilladdrinfo);
            };
        })();

    </script>

}