@model RudycommerceData.Entities.Client
@using RudycommerceLib.Reflection
@using RudycommerceData.Entities
@{
    ViewBag.Title = Resources.Checkout.PersonalInfo;
    Layout = "~/Views/Shared/_CheckoutLayout.cshtml";

    //Model.Password = null;
}

@section Styles{
    @Styles.Render("/Content/Pages/Form.css")
    <style>
        @@media (max-width: 575px) {
            #user-form {
                width: 100%;
            }
        }

        @@media (min-width: 576px) {
            #user-form {
                width: 100%;
            }
        }

        @@media (min-width: 768px) {
            #user-form {
                width: 80%;
            }
        }

            #pwd-form-group {
                padding-left:2rem;
                margin-top:-0.5rem;
                margin-bottom:2rem;
            }

            #agrees-to-terms-group.form-group > div {
                display:flex;
            }
            #agrees-to-terms-group.form-group .checkbox{
                margin-right:1rem;
            }
        #agrees-to-terms-group.form-group label {
            margin-bottom:0;
            width:100%;
        }
    </style>
} 

<div class="container content-center">

    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "user-form" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @{ string valSumClass = (ViewBag.ShowValidationSummary == null) ? "hide" : "";}
            @Html.ValidationSummary("", new { @class = "alert alert-danger " + valSumClass })

            <!--First name and Last name-->
            <div class="row">

                <div class="col-12 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-12" })
                        <div class="col-12">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", placeholder = Resources.Checkout.ForExampleABBR + " " + Resources.Checkout.ExampleFirstName } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-12 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-12" })
                        <div class="col-12">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", placeholder = Resources.Checkout.ForExampleABBR + " " + Resources.Checkout.ExampleLastName } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <!--Email-->
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-12" })
                <div class="col-12">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = Resources.Checkout.ForExampleABBR + " " + Resources.Checkout.ExampleEmail } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <!--Street and Number-->
            <div class="row">
                <div class="col-12 col-md-9">
                    <div class="form-group">
                        @Html.LabelFor(model => model.StreetAndNumber, htmlAttributes: new { @class = "control-label col-12" })
                        <div class="col-12">
                            @Html.EditorFor(model => model.StreetAndNumber, new { htmlAttributes = new { @class = "form-control", placeholder = Resources.Checkout.ForExampleABBR + " " + Resources.Checkout.ExampleStreetAndNumber } })
                            @Html.ValidationMessageFor(model => model.StreetAndNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-6 col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MailBox, htmlAttributes: new { @class = "control-label col-12" })
                        <div class="col-12">
                            @Html.EditorFor(model => model.MailBox, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MailBox, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <!--Postal code and City-->
            <div class="row">
                <div class="col-6 col-md-3">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-12" })
                        <div class="col-12">
                            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control", placeholder = Resources.Checkout.ForExampleABBR + " " + Resources.Checkout.ExamplePostalCode } })
                            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-12 col-md-9">
                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-12" })
                        <div class="col-12">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = Resources.Checkout.ForExampleABBR + " " + Resources.Checkout.ExampleCity } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <!--Country-->
            <div class="row">
                <div class="col-12 col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label col-12" })
                        <div class="col-12">
                            @Html.DropDownListFor(model => model.CountryCode, new SelectList(Model.CountriesByCode, "Key", "Value"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <!--Wants account-->
            <div class="form-group cb">
                <div class="checkbox content-center">
                    @Html.EditorFor(model => model.AccountUser)
                </div>
                @Html.LabelFor(model => model.AccountUser, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.AccountUser, "", new { @class = "text-danger" })
            </div>
            <!--Password-->
            @{ string pwdClass = (Model.AccountUser) ? "" : "hide";}

            <div id="pwd-form-group" class="form-group @pwdClass">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-12" })
                <div class="col-12">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = Resources.Checkout.PasswordPlaceholder } })

                    @*https://codepen.io/gabrieleromanato/pen/VYmrJV*@
                    <div style="margin-top:0.5rem;">
                        <input type="checkbox" id="show-hide" name="show-hide" value="" />
                        <label for="show-hide">Show password</label>
                    </div>

                    <label class="explanation-form-label"> @Resources.Checkout.PasswordExplanation </label>

                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group cb">
                <div class="checkbox content-center">
                    @Html.EditorFor(model => model.WantsNewsletter)
                </div>
                @Html.LabelFor(model => model.WantsNewsletter, htmlAttributes: new { @class = "control-label" })
                @Html.ValidationMessageFor(model => model.WantsNewsletter, "", new { @class = "text-danger" })
            </div>

            <div id="agrees-to-terms-group" class="form-group">
                <div>
                    <div class="checkbox content-center">
                        @Html.EditorFor(model => model.AgreesToTermsAndConditions)
                    </div>
                    <label class="control-label" for="AgreesToTermsAndConditions">
                        @{
                            string iAgreeSentence = Resources.Checkout.IAgreeWithTermsConds;

                            string pathToPopup = Url.Action("TermsAndConditions", "Utilities", new { popup = true }, this.Request.Url.Scheme);

                            string termsAndConditionsPopupString = RudycommerceLib.Web.PopupExtensions.PopupURLString(
                                pathToPopup, Resources.Checkout.TermsAndConds, 600, 700);

                            string sentence = String.Format(iAgreeSentence, termsAndConditionsPopupString);
                        }
                        @Html.Raw(sentence)

                    </label>
                </div>
                @Html.ValidationMessageFor(model => model.AgreesToTermsAndConditions, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <div class="col-12 content-vertcen-right">
                    <input type="submit" value="@Resources.Checkout.ContinueToDelivery" class="btn btn-secondary" />
                </div>
            </div>
        </div>
    }
</div>

@section scripts{
    <script>
        (function () {

            var PasswordToggler = function (element, field) {
                this.element = element;
                this.field = field;

                this.toggle();
            };

            PasswordToggler.prototype = {
                toggle: function () {
                    var self = this;
                    self.element.addEventListener('change', function () {
                        if (self.element.checked) {
                            debugger;
                            self.field.setAttribute('type', 'text');
                        } else {
                            debugger;
                            self.field.setAttribute('type', 'password');
                        }
                    }, false);
                }
            };

            var PasswordRegionToggler = function (cb, field, pwd) {
                this.cbox = cb;
                this.region = field;
                this.password = pwd;

                this.toggle();
            };

            PasswordRegionToggler.prototype = {
                toggle: function () {
                    var self = this;
                    self.cbox.addEventListener('change', function () {
                        if (self.cbox.checked) {
                            self.region.classList.remove('hide');
                            self.password.value = '';
                        } else {
                            self.region.classList.add('hide');
                            self.password.value = '';
                        }
                    }, false);
                }
            };

            window.onload = function () {
                var pwdCheckbox = document.querySelector('#show-hide'),
                    pwd = document.querySelector('#Password');

                var passwordToggler = new PasswordToggler(pwdCheckbox, pwd);

                // do same for show/hide password formgroup

                var accountCheckbox = document.querySelector('#AccountUser'),
                    hideablePasswordRegion = document.querySelector('#pwd-form-group');

                var passwordRegionToggler = new PasswordRegionToggler(accountCheckbox, hideablePasswordRegion, pwd);
            };

        })();


    </script>

    @Scripts.Render("~/bundles/jqueryval")
}