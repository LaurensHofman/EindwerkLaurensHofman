<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CartOverviewTitle" xml:space="preserve">
    <value>Overview of your shopping cart</value>
  </data>
  <data name="CartOverviewTitleShort" xml:space="preserve">
    <value>Cart overview</value>
  </data>
  <data name="ChooseOtherAddressForDelivery" xml:space="preserve">
    <value>Deliver to another address than your own?</value>
  </data>
  <data name="ContinueToDelivery" xml:space="preserve">
    <value>Continue to delivery options</value>
  </data>
  <data name="ContinueToPayment" xml:space="preserve">
    <value>Continue to payment</value>
  </data>
  <data name="ContinueToPersonalInfoForm" xml:space="preserve">
    <value>Continue to client form</value>
  </data>
  <data name="Delivery" xml:space="preserve">
    <value>Delivery</value>
  </data>
  <data name="DeliveryArrow" xml:space="preserve">
    <value>Delivery</value>
  </data>
  <data name="EmailNotUnique" xml:space="preserve">
    <value>The chosen email address is already being used. Please use another email address.</value>
  </data>
  <data name="ExampleCity" xml:space="preserve">
    <value>London</value>
  </data>
  <data name="ExampleEmail" xml:space="preserve">
    <value>john.appleseed@rudycommerce.com</value>
  </data>
  <data name="ExampleFirstName" xml:space="preserve">
    <value>John</value>
  </data>
  <data name="ExampleLastName" xml:space="preserve">
    <value>Appleseed</value>
  </data>
  <data name="ExamplePostalCode" xml:space="preserve">
    <value>WC2N 5DU</value>
  </data>
  <data name="ExampleStreetAndNumber" xml:space="preserve">
    <value>Baker Street 25</value>
  </data>
  <data name="ForExampleABBR" xml:space="preserve">
    <value>e.g.</value>
  </data>
  <data name="IAgreeWithTermsConds" xml:space="preserve">
    <value>I agree with the {0}. *</value>
  </data>
  <data name="LoginFormTitle" xml:space="preserve">
    <value>Login with your account</value>
  </data>
  <data name="NoAccountContent" xml:space="preserve">
    <value>An account is not required to purchase with us. &lt;br/&gt; Although with an account you can make your future purchases easier. On the next page you can create an account if you desire so.</value>
    <comment>&lt;br/&gt; for linebreaks</comment>
  </data>
  <data name="NoAccountTitle" xml:space="preserve">
    <value>No account?</value>
  </data>
  <data name="PasswordExplanation" xml:space="preserve">
    <value>You can choose whatever password that pleases you, if its length is between 6 and 40 characters.</value>
  </data>
  <data name="PasswordPlaceholder" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Payment" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="PaymentArrow" xml:space="preserve">
    <value>Payment</value>
  </data>
  <data name="PaymentAtRudycommerce" xml:space="preserve">
    <value>Payment at Rudycommerce</value>
  </data>
  <data name="PaymentWithCard" xml:space="preserve">
    <value>Payment with credit card</value>
  </data>
  <data name="PayUsingCard" xml:space="preserve">
    <value>Pay using your credit card</value>
  </data>
  <data name="PersonalInfo" xml:space="preserve">
    <value>Personal info</value>
  </data>
  <data name="PersonalInfoArrow" xml:space="preserve">
    <value>Personal info</value>
  </data>
  <data name="TermsAndConds" xml:space="preserve">
    <value>General Terms and Conditions</value>
  </data>
  <data name="YourCart" xml:space="preserve">
    <value>Your shopping cart</value>
  </data>
  <data name="ChooseYourPaymentOption" xml:space="preserve">
    <value>Choose your payment option</value>
  </data>
  <data name="OrderFinished" xml:space="preserve">
    <value>Order finished</value>
  </data>
  <data name="PaymentWithPaypal" xml:space="preserve">
    <value>Payment with PayPal</value>
  </data>
  <data name="BackToHomepage" xml:space="preserve">
    <value>Back to homepage</value>
  </data>
  <data name="OrderFinishedThankYouText" xml:space="preserve">
    <value>Your order has succesfully been sent. Your work here is done, it's up to us now. &lt;br/&gt;&lt;br/&gt; We shall commence by carefully preparing your order, so the courier can pick it up and deliver it to your preferred location. &lt;br/&gt; &lt;br/&gt; Now you can start dreaming about what you are going to accomplish with your new gaming gear, because soon you're going to be the best in every game you'll play. &lt;br/&gt; &lt;br/&gt; Kind regards, &lt;br/&gt; Rudycommerce</value>
    <comment>Use &lt;br/&gt; for formatting</comment>
  </data>
  <data name="CartEmptyBackToHomepage" xml:space="preserve">
    <value>Back to homepage</value>
  </data>
  <data name="CartEmptyLetsFillIt" xml:space="preserve">
    <value>Your cart is empty at the moment, let's fill it back up!</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>No account yet? Register</value>
  </data>
  <data name="CheckoutCartListEmpty" xml:space="preserve">
    <value>No products were found</value>
  </data>
  <data name="OrderEmailContent" xml:space="preserve">
    <value>Dear {0}, 

Your order at Rudycommerce is currently being processed.
We will try to do everything we can to prepare your delivery as soon as possible, so that the courrier can deliver it as soon as possible.

Your ordered products:
{1}
Your delivery address:
{2} {3}
{4} {5} 

Thank you for choosing us as your store,
Rudycommerce
</value>
  </data>
  <data name="OrderEmailTitle" xml:space="preserve">
    <value>Your order at Rudycommerce has been made</value>
  </data>
  <data name="ContinueShopping" xml:space="preserve">
    <value>Continue shopping</value>
  </data>
</root>